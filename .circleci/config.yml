version: 2.1

orbs:
  node: circleci/node@5.1.0

jobs:
  # [단계 1.1] : front build test 확인
  front_test_build:
    executor: node/default

    working_directory: ~/frontend/front
    steps:
      - checkout:
          path: ~/frontend

      - run:
          name: Current WorkSpace Monitoring
          command: ls -al ./

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-  # 정확히 일치하는 항목이 없으면 최신 캐시를 사용하도록 대체
      
      # - run: sudo npm install -g npm@latest
      # - node/install-packages:
      #     cache-path: ./node_modules
      #     override-ci-command: npm install

      - node/install-packages:
          pkg-manager: yarn

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # - run:
      #     name: Run tests
      #     command: yarn test
      - run:
          name: Build app
          command: yarn build

      # Workflow Job간 파일 공유 (circleci_persist_to_workspace)
      - persist_to_workspace:
          root: ~/frontend/front
          paths:
            - ./dist

  # [단계 1.2] : front deploy 준비
  front_deploy:
    executor: node/default

    working_directory: ~/frontend/front
    steps:
      - attach_workspace:
          at: .  # Root Workspace Attach
          # at: ./dist

      - run:
          name: Current WorkSpace Monitoring
          command: ls -alR ./

  # [단계 2.1] : back junit test 확인
  back_test_junit:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/backend/back
    steps:
      - checkout:
          path: ~/backend

      - run:
          name: Current WorkSpace Monitoring
          command: ls -al ./

      # run tests!
      # - run: gradle test

  # [단계 2.2] : back build gradle
  back_build:
    docker:
      - image: circleci/openjdk:8-jdk

    # working_directory: ~/back
    environment:
      JVM_OPTS: -Xmx3200m   # JVM 최대 힙 제한 사용자 정의
      TERM: dumb

    working_directory: ~/backend/back
    steps:
      - checkout:
          path: ~/backend
      - attach_workspace:
          at: ~/project   # 빌드 작업에서 작업공간 재사용

      - run:
          name: Current WorkSpace Monitoring
          command: ls -al ./

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-  # 정확히 일치하는 항목이 없으면 최신 캐시를 사용하도록 대체

      - run: gradle dependencies

      - save_cache:
          paths:
            - .gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: chmod permissions
          command: chmod +x ./gradlew

      - run:
          name: Build gradle
          command: ./gradlew

      # Workflow Job간 파일 공유 (circleci_persist_to_workspace)
      - persist_to_workspace:
          root: .
          paths:
            - ./build

  # [단계 2.3] : back deploy 준비
  back_deploy:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/backend/back
    steps:
      - attach_workspace:
          at: .  # Root Workspace Attach
          # at: ./build

      - run:
          name: Current WorkSpace Monitoring
          command: ls -alR ./


workflows:
  version: 2
  DevOps_LifeCycle:
    jobs:
      - front_test_build
      # - node/run:
      #     requires:
      #       - front_test_build
      #     app-dir: ~/front
      #     yarn-run: build
      - front_deploy:
          requires:
            - front_test_build
          filters:
            branches:
              only: main # only deploy when on main
      - back_test_junit
      - back_build:
          requires:
            - back_test_junit
      - back_deploy:
          requires:
            - back_build
          filters:
            branches:
              only: main # only deploy when on main